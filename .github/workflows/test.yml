name: dstll-test-caller

on:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  test-job:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          repository: 'dhth/hours'
          path: 'hours/hours'
          fetch-depth: 20

      - name: Get starting commit
        id: get-starting-commit
        working-directory: ./hours/hours
        run: |
          echo "commit=$(git rev-parse --short HEAD~10)" >> $GITHUB_OUTPUT

      - name: Get ending commit
        id: get-ending-commit
        working-directory: ./hours/hours
        run: |
          echo "commit=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - id: get-dstll-diff
        uses: dhth/dstll-action-test@v0.1.12
        with:
          directory: hours/hours
          pattern: '**.go'
          starting-commit: ${{ steps.get-starting-commit.outputs.commit }}
          ending-commit: ${{ steps.get-ending-commit.outputs.commit }}

      - run: echo "$DIFF"
        id: get-diff
        env:
          DIFF: ${{ steps.get-dstll-diff.outputs.diff }}

      - uses: actions/github-script@v7
        with:
          github-token: ${{ github.token }}
          script: |
            // 1. Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('dstll-diff')
            })

            // 2. Prepare format of the comment
            const output = `### dstll-diff
            > ${{ steps.get-starting-commit.outputs.commit }}..${{ steps.get-ending-commit.outputs.commit }} -- '**.go'
            <details><summary> expand </summary>

            \`\`\`diff\n
            ${{ steps.get-dstll-diff.outputs.diff }}
            \`\`\`

            </details>`;

            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }
